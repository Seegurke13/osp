security:
    encoders:
        App\Entity\User:
            algorithm: argon2i
        Symfony\Component\Security\Core\User\User: plaintext

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        chain_provider:
            chain:
                providers: [in_memory, db]
        in_memory:
            memory:
                users:
                    user:  { password: 'osp', roles: [ 'ROLE_USER' ] }
                    admin:  { password: 'osp', roles: [ 'ROLE_ADMIN' ] }
        db:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true
            provider: chain_provider
            guard:
                authenticators:
                - App\Security\AppAuthenticator
            logout:
                path: app_logout
            remember_me:
                secret:   '%kernel.secret%'
                lifetime: 604800 # 1 week in seconds
                path:     /
            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # https://symfony.com/doc/current/security/form_login_setup.html

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/login , roles: IS_AUTHENTICATED_ANONYMOUSLY}
        - { path: ^/, roles: [ROLE_ADMIN, ROLE_USER] }
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
